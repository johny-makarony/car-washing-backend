{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Your Pet app API",
    "description": "Documentation for server requests and responses of the Your Pet app. An app for posting pet notices about selling, lost pets, and pets available for adoption.",
    "contact": {
      "name": "Example: Your-Pet",
      "url": "https://oleksandrvaniuta.github.io/Your-Pet-Team-Project"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://your-pet-backend-cmwy.onrender.com/api/" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User + Pets",
      "description": "User + Pets endpoints"
    },
    {
      "name": "Friends",
      "description": "Our Friends endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh user's tokens",
        "parameters": [],
        "requestBody": {
          "description": "Refresh object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "403": {
            "description": "Refresh token invalid"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get information about the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/profile": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Updates information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object for the current profile",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/profile/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Updates avatar of the current user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/ProfileAvatarRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add a new pet",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add's pet object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      },
      "get": {
        "tags": ["Pets"],
        "summary": "Get all pets",
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Pet's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notices/category/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all notices by search query and category",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "description": "Notices category"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search word"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of notices per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/notice/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get by id notice",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorite notices",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "description": "Search word"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Number of notices per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/{noticeId}/favorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add or remove notice in favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFavoriteNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add a new notice",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/own": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user's notices",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "description": "Search word"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Number of notices per page"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/{noticeId}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete user's notice by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "description": "User's notice id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": ["User + Pets"],
        "summary": "Gets information about the user and one's pets",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAndPets"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Gets information about all our Friends",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFriendsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news by search query",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "description": "Search word"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Number of news per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mykola"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "user@example.com"
            }
          }
        },
        "example": { "user": { "email": "user@example.com" } }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "accessToken": {
            "type": "string",
            "description": "User's access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTM1OTYzNGI0OWJjMDY3MjU1NDU1YSIsImlhdCI6MTY5MjYyMTE4NywiZXhwIjoxNjkyNzA3NTg3fQ.S7JkJ3xYF5AfkMIggChgSPZc3nHPA5dLTaUAUxvPiLE"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTMyNmFjYTlhMWI1ZTE0MTY4MDk2MiIsImlhdCI6MTY5MjYwODE4NywiZXhwIjoxNjkyNjk0NTg3fQ.Hvbtuq0Hh8yf9KmWUoRhH1E8kFMljuFLmYS_Anug194"
          }
        },
        "example": {
          "email": "user@example.com",
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTM1OTYzNGI0OWJjMDY3MjU1NDU1YSIsImlhdCI6MTY5MjYyMTE4NywiZXhwIjoxNjkyNzA3NTg3fQ.S7JkJ3xYF5AfkMIggChgSPZc3nHPA5dLTaUAUxvPiLE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTMyNmFjYTlhMWI1ZTE0MTY4MDk2MiIsImlhdCI6MTY5MjYwODE4NywiZXhwIjoxNjkyNjk0NTg3fQ.Hvbtuq0Hh8yf9KmWUoRhH1E8kFMljuFLmYS_Anug194"
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTRmYWE0ZDczOTdmZTBkZWY2YWZhMiIsImlhdCI6MTY5MjcyODE5OSwiZXhwIjoxNjkyNzI4MzE5fQ.pPT3WwEt9f6-0nEJ74fX9nQSAtf0pBoSuz5XhnYDxU4"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTRmYWE0ZDczOTdmZTBkZWY2YWZhMiIsImlhdCI6MTY5MjcyODE5OSwiZXhwIjoxNjkyNzI4MzE5fQ.pPT3WwEt9f6-0nEJ74fX9nQSAtf0pBoSuz5XhnYDxU4"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTM1OTYzNGI0OWJjMDY3MjU1NDU1YSIsImlhdCI6MTY5MjYyMTE4NywiZXhwIjoxNjkyNzA3NTg3fQ.S7JkJ3xYF5AfkMIggChgSPZc3nHPA5dLTaUAUxvPiLE"
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTM1OTYzNGI0OWJjMDY3MjU1NDU1YSIsImlhdCI6MTY5MjYyMTE4NywiZXhwIjoxNjkyNzA3NTg3fQ.S7JkJ3xYF5AfkMIggChgSPZc3nHPA5dLTaUAUxvPiLE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTMyNmFjYTlhMWI1ZTE0MTY4MDk2MiIsImlhdCI6MTY5MjYwODE4NywiZXhwIjoxNjkyNjk0NTg3fQ.Hvbtuq0Hh8yf9KmWUoRhH1E8kFMljuFLmYS_Anug194"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "64e500f09cf419d2b26820b9"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "380991122333"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.02.1999"
          },
          "accessToken": {
            "type": "string",
            "description": "User's access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTUwMGYwOWNmNDE5ZDJiMjY4MjBiOSIsImlhdCI6MTY5MjczNTM3NiwiZXhwIjoxNjkzMzQwMTc2fQ.zy8aG3QMFs-ARrn2ji0vWJ2Rtcr65NBnz5sBT7Z8fO8"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTUwMGYwOWNmNDE5ZDJiMjY4MjBiOSIsImlhdCI6MTY5MjczNTM3NiwiZXhwIjoxNjkyODIxNzc2fQ.IYGsfdyeXAEU0z8zcL523lW31oUJHOjCMIBpLMxqNTk"
          }
        },
        "example": {
          "_id": "64e500f09cf419d2b26820b9",
          "name": "Zhenya",
          "email": "user@example.com",
          "phone": "+380991122333",
          "birthday": "01.02.1999",
          "city": "Sumy",
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTUwMGYwOWNmNDE5ZDJiMjY4MjBiOSIsImlhdCI6MTY5MjczNTM3NiwiZXhwIjoxNjkzMzQwMTc2fQ.zy8aG3QMFs-ARrn2ji0vWJ2Rtcr65NBnz5sBT7Z8fO8",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTUwMGYwOWNmNDE5ZDJiMjY4MjBiOSIsImlhdCI6MTY5MjczNTM3NiwiZXhwIjoxNjkyODIxNzc2fQ.IYGsfdyeXAEU0z8zcL523lW31oUJHOjCMIBpLMxqNTk"
        }
      },
      "ProfileUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "380991122333"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01-02-1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Sumy"
          }
        },
        "example": {
          "name": "User",
          "email": "user@example.com",
          "phone": "+380991122333",
          "birthday": "01-02-1999",
          "city": "Sumy"
        }
      },
      "ProfileUpdateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "380991122333"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01-02-1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Sumy"
          }
        },
        "example": {
          "name": "User",
          "email": "user@example.com",
          "phone": "+380991122333",
          "birthday": "01-02-1999",
          "city": "Sumy"
        }
      },
      "ProfileAvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "file",
            "description": "image.jpg for user's avatar"
          }
        }
      },
      "ProfileAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        },
        "example": {
          "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
        }
      },
      "AddPetsRequest": {
        "type": "object",
        "required": ["avatarPet", "name", "dateOfBirth", "type", "comments"],
        "properties": {
          "avatarPet": {
            "type": "file",
            "description": "image.jpg for pet's avatar"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rada"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "12-12-2012"
          },
          "type": {
            "type": "string",
            "description": "Pets's type",
            "example": "Pomeranian"
          },
          "comments": {
            "type": "string",
            "description": "Some comments about pet",
            "example": "Beautiful and clever girl"
          }
        }
      },
      "AddPetsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "64e10d144a3a60fc7905bf79"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rada"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "12-12-2012"
          },
          "type": {
            "type": "string",
            "description": "Pets's type",
            "example": "Pomeranian"
          },
          "comments": {
            "type": "string",
            "description": "Some comments about pet",
            "example": "Beautiful and clever girl"
          },
          "avatarPet": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        },
        "example": {
          "_id": "54e103c48f5f51dbeffcc9cb",
          "name": "Rada",
          "dateOfBirth": "12-12-2012",
          "type": "Pomeranian",
          "comments": "Beautiful and clever girl",
          "avatarPet": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
        }
      },
      "GetPetsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Pet's id",
              "example": "54e103c48f5f51dbeffcc9cb"
            },
            "name": {
              "type": "string",
              "description": "Pet's email",
              "example": "Rada"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "12-12-2012"
            },
            "type": {
              "type": "string",
              "description": "Pets's type",
              "example": "Pomeranian"
            },
            "comments": {
              "type": "string",
              "description": "Some comments about pet",
              "example": "Beautiful and clever girl"
            },
            "avatarPet": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            }
          }
        },
        "example": [
          {
            "id": "54e103c48f5f51dbeffcc9cb",
            "name": "Rada",
            "dateOfBirth": "12-12-2012",
            "type": "Pomeranian",
            "comments": "Beautiful and clever girl",
            "avatar": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          },
          {
            "id": "54e103c48f5f51dbeffcc9cb",
            "name": "Spike",
            "dateOfBirth": "21-12-2012",
            "type": "Pomeranian",
            "comments": "Beautiful and clever boy",
            "avatar": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        ]
      },
      "DeletePetResponse": {
        "type": "object",
        "properties": {
          "message": "Delete success"
        },
        "example": {
          "message": "Delete success"
        }
      },
      "GetAllNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "views": {
              "type": "number",
              "description": "Number of views notice",
              "example": 255
            },
            "owner": {
              "type": "string",
              "description": "User's id who created the notice",
              "example": "64e0e0bcc4d8d3a91d3aa90c"
            },
            "usersAddToFavorite": {
              "type": "array",
              "description": "Users who added the notice in favorites",
              "example": [
                "64e2483e058910c38b98f16d",
                "64e0e0bcc4d8d3a91d3aa90c"
              ]
            }
          }
        },
        "example": {
          "totalPages": 1,
          "notices": [
            {
              "_id": "64e10d144a3a60fc7905bf79",
              "category": "sell",
              "title": "Reliable friend",
              "name": "Nice ones",
              "type": "German Shepherd",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Sumy",
              "birthday": "15-04-2015",
              "sex": "female",
              "comment": "Active dog",
              "price": 1000,
              "views": 255,
              "owner": "64e0e0bcc4d8d3a91d3aa90c",
              "usersAddToFavorite": [
                "64e2483e058910c38b98f16d",
                "64e0e0bcc4d8d3a91d3aa90c"
              ]
            },
            {
              "_id": "64e103c48f5f51dbeffcc9cb",
              "category": "sell",
              "title": "A cheerful friend",
              "name": "Point",
              "type": "Cat",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Sumy",
              "birthday": "28-08-2022",
              "sex": "female",
              "comment": "Domestic cat",
              "price": 100,
              "views": 143,
              "owner": "64e0e0bcc4d8d3a91d3aa90c",
              "usersAddToFavorite": [
                "64e2483e058910c38b98f16d",
                "64e0e0bcc4d8d3a91d3aa90c"
              ]
            }
          ]
        }
      },
      "GetByIdNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice's id",
            "example": "64e10d144a3a60fc7905bf79"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Reliable friend"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Nice ones"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "German Shepherd"
          },
          "avatarURL": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Sumy"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "15-04-2015"
          },
          "sex": {
            "type": "string",
            "description": "Pet's gender",
            "example": "female"
          },
          "comment": {
            "type": "string",
            "description": "Notice's comment",
            "example": "Active dog"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": 1000
          },
          "views": {
            "type": "number",
            "description": "Number of views notice",
            "example": 255
          },
          "owner": {
            "type": "object",
            "description": "User's id who created the notice",
            "example": {
              "_id": "64e5b5a31412cc124cf26063",
              "name": "LuizaSunshine",
              "email": "luiza@mail.com"
            }
          },
          "usersAddToFavorite": {
            "type": "array",
            "description": "Users who added the notice in favorites",
            "example": ["64e5eb10b5c3ed50f3466cc5", "64e2483e058910c38b98f16d"]
          }
        },
        "example": {
          "_id": "64e103c48f5f51dbeffcc9cb",
          "category": "sell",
          "title": "test",
          "name": "Naisy",
          "dateOfBirth": "15-04-2015",
          "type": "dog",
          "comment": "Active",
          "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
          "localion": "Sumy",
          "sex": "girl",
          "price": 1000,
          "views": 255,
          "owner": {
            "_id": "64e5b5a31412cc124cf26063",
            "name": "LuizaSunshine",
            "email": "luiza@mail.com"
          },
          "usersAddToFavorite": [
            "64e5eb10b5c3ed50f3466cc5",
            "64e2483e058910c38b98f16d"
          ]
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "views": {
              "type": "number",
              "description": "Number of views notice",
              "example": 255
            },
            "owner": {
              "type": "object",
              "description": "User's id who created the notice",
              "example": {
                "_id": "64e5b5a31412cc124cf26063",
                "name": "LuizaSunshine",
                "email": "luiza@mail.com"
              }
            },
            "usersAddToFavorite": {
              "type": "array",
              "description": "Users who added the notice in favorites",
              "example": [
                "64e5eb10b5c3ed50f3466cc5",
                "64e2483e058910c38b98f16d"
              ]
            }
          }
        },
        "example": {
          "totalPages": 1,
          "notices": [
            {
              "_id": "64e103c48f5f51dbeffcc9cb",
              "category": "sell",
              "title": "test",
              "name": "Naisy",
              "dateOfBirth": "15-04-2015",
              "type": "dog",
              "comment": "Active",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "localion": "Sumy",
              "sex": "girl",
              "price": 1000,
              "views": 255,
              "owner": {
                "_id": "64e5b5a31412cc124cf26063",
                "name": "LuizaSunshine",
                "email": "luiza@mail.com"
              },
              "usersAddToFavorite": [
                "64e5eb10b5c3ed50f3466cc5",
                "64e2483e058910c38b98f16d"
              ]
            },
            {
              "_id": "64e38375235f29c7be1aeb9f",
              "category": "sell",
              "title": "Gold fish",
              "name": "Eva",
              "birthday": "30-12-2012",
              "type": "fish",
              "comment": "lucky fish",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Bakhmut",
              "sex": "girl",
              "price": 12,
              "views": 278,
              "owner": {
                "_id": "64e326aca9a1b5e141680962",
                "name": "Mykola",
                "email": "nickkuts888@gmail.com"
              },
              "usersAddToFavorite": [
                "64e5eb10b5c3ed50f3466cc5",
                "64e2483e058910c38b98f16d"
              ]
            }
          ]
        }
      },
      "UpdateFavoriteNoticeResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "UserId who added or removed the notice to favorites",
            "example": "64e2483e058910c38b98f16d"
          }
        },
        "example": {
          "userId": "64e2483e058910c38b98f16d"
        }
      },
      "GetUserNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "views": {
              "type": "number",
              "description": "Number of views notice",
              "example": 255
            },
            "owner": {
              "type": "string",
              "description": "User's id who created the notice",
              "example": "64e0e0bcc4d8d3a91d3aa90c"
            },
            "usersAddToFavorite": {
              "type": "array",
              "description": "Users who added the notice in favorites",
              "example": [
                {
                  "_id": "64e2483e058910c38b98f16d",
                  "name": "Mykola",
                  "email": "user@example.com"
                },
                {
                  "_id": "64e0e0bcc4d8d3a91d3aa90c",
                  "name": "Mykola",
                  "email": "nickkuts888@gmail.com"
                }
              ]
            }
          }
        },
        "example": {
          "totalPages": 1,
          "notices": [
            {
              "_id": "52e10d144a3a60fc7905bf79",
              "category": "sell",
              "title": "Reliable friend",
              "name": "Nice ones",
              "type": "German Shepherd",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Sumy",
              "birthday": "15-04-2015",
              "sex": "female",
              "comment": "Active dog",
              "price": 1000,
              "views": 255,
              "owner": "64e0e0bcc4d8d3a91d3aa90c",
              "usersAddToFavorite": [
                {
                  "_id": "64e2483e058910c38b98f16d",
                  "name": "Mykola",
                  "email": "user@example.com"
                },
                {
                  "_id": "64e0e0bcc4d8d3a91d3aa90c",
                  "name": "Mykola",
                  "email": "nickkuts888@gmail.com"
                }
              ]
            },
            {
              "_id": "64e38375235f29c7be1aeb9f",
              "category": "sell",
              "title": "Gold fish",
              "name": "Eva",
              "birthday": "30-12-2012",
              "type": "fish",
              "comment": "lucky fish",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Bakhmut",
              "sex": "girl",
              "price": 12,
              "views": 278,
              "owner": "64e0e0bcc4d8d3a91d3aa90c",
              "usersAddToFavorite": [
                {
                  "_id": "64e2483e058910c38b98f16d",
                  "name": "Mykola",
                  "email": "user@example.com"
                }
              ]
            }
          ]
        }
      },
      "AddNoticenRequest": {
        "type": "object",
        "required": [
          "avatarURL",
          "category",
          "title",
          "name",
          "type",
          "location",
          "birthday",
          "sex"
        ],
        "properties": {
          "avatarURL": {
            "type": "file",
            "description": "image.jpg"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Reliable friend"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Nice ones"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "German Shepherd"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Sumy"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "15-04-2015"
          },
          "sex": {
            "type": "string",
            "description": "Pet's gender",
            "example": "female"
          },
          "comment": {
            "type": "string",
            "description": "Notice's comment",
            "example": "Active dog"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": 1000
          }
        },
        "example": {
          "category": "sell",
          "title": "Reliable friend",
          "name": "Nice ones",
          "type": "German Shepherd",
          "location": "Sumy",
          "birthday": "15-04-2015",
          "sex": "female",
          "comment": "Active dog",
          "price": 1000
        }
      },
      "AddUserNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice's id",
            "example": "64e10d144a3a60fc7905bf79"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Reliable friend"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Nice ones"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "German Shepherd"
          },
          "avatarURL": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Sumy"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "15-04-2015"
          },
          "sex": {
            "type": "string",
            "description": "Pet's gender",
            "example": "female"
          },
          "comment": {
            "type": "string",
            "description": "Notice's comment",
            "example": "Active dog"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": 1000
          },
          "views": {
            "type": "number",
            "description": "Number of views notice",
            "example": 0
          },
          "owner": {
            "type": "object",
            "description": "User's id who created the notice",
            "example": "64e5b5a31412cc124cf26063"
          },
          "usersAddToFavorite": {
            "type": "array",
            "description": "Users who added the notice in favorites",
            "example": []
          }
        },
        "example": {
          "_id": "64e103c48f5f51dbeffcc9cb",
          "category": "sell",
          "title": "test",
          "name": "Naisy",
          "dateOfBirth": "15-04-2015",
          "type": "dog",
          "comment": "Active",
          "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
          "localion": "Sumy",
          "sex": "girl",
          "price": 1000,
          "views": 0,
          "owner": "64e5b5a31412cc124cf26063",
          "usersAddToFavorite": []
        }
      },
      "DeleteUserNoticesResponse": {
        "type": "object",
        "properties": {
          "message": "Delete success"
        },
        "example": {
          "message": "Delete success"
        }
      },
      "UserAndPets": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "64e10d144a3a60fc7905bf79"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "User"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "user@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "25-07-1999"
              },
              "city": {
                "type": "string",
                "description": "User's location",
                "example": "Sumy"
              },
              "phone": {
                "type": "string",
                "description": "User's pgone",
                "example": "+380999999999"
              }
            }
          },
          "userPets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Pet's id",
                  "example": "64e327b50a4bcf729aa206d1"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Spike"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "02-10-2021"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "boy"
                },
                "comments": {
                  "type": "string",
                  "description": "Some comments about pet",
                  "example": "Beautiful and clever girl"
                },
                "avatarPet": {
                  "type": "string",
                  "description": "Pet's avatar url",
                  "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "64e10d144a3a60fc7905bf79"
                }
              }
            }
          }
        },
        "example": {
          "user": {
            "_id": "64e601c60f699194629c1a92",
            "name": "User",
            "email": "user@example.com",
            "birthday": "25-07-1999",
            "city": "Sumy",
            "phone": "+380997777777",
            "avatarURL": "http://res.cloudinary.com/dlg6ohzhq/image/upload/v1693067020/kouuwf0rljtutgwhyuu5.jpg"
          },
          "userPets": [
            {
              "_id": "64e103c48f5f51dbeffcc9cb",
              "category": "lost-found",
              "title": "A cheerful friend",
              "name": "Point",
              "type": "Cat",
              "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
              "location": "Sumy",
              "birthday": "28-08-2022",
              "sex": "female",
              "comment": "Domestic cat",
              "owner": "64e0e0bcc4d8d3a91d3aa90c"
            }
          ]
        }
      },
      "GetAllFriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friend's id",
              "example": "64e4cd1e4b6856a3d61ff3a7"
            },
            "title": {
              "type": "string",
              "description": "Friend's title",
              "example": "Happy Paw"
            },
            "url": {
              "type": "string",
              "description": "Friend's cite url",
              "example": "https://happypaw.ua/ua"
            },
            "addressUrl": {
              "type": "string",
              "description": "Friend's address url",
              "example": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6"
            },
            "imageUrl": {
              "type": "string",
              "description": "Friends logo image",
              "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png"
            },
            "address": {
              "type": "string",
              "description": "Friend's address",
              "example": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean",
                    "description": "Is the store open",
                    "example": true
                  },
                  "from": {
                    "type": "string",
                    "description": "Since then works",
                    "example": "09:00"
                  },
                  "to": {
                    "type": "string",
                    "description": "finished work",
                    "example": "17:00"
                  }
                }
              }
            },
            "phone": {
              "type": "string",
              "description": "Friend's phone",
              "example": "+380442900329"
            },
            "email": {
              "type": "string",
              "description": "Friend's email",
              "example": "hello@happypaw.ua"
            }
          }
        },
        "example": [
          {
            "_id": "64e4cd1e4b6856a3d61ff3a7",
            "title": "Happy Paw",
            "url": "https://happypaw.ua/ua",
            "addressUrl": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png",
            "address": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)",
            "workDays": [
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" }
            ],
            "phone": "+380442900329",
            "email": "hello@happypaw.ua"
          },
          {
            "title": "ЛКП “ЛЕВ”",
            "url": "https://lkplev.com/",
            "addressUrl": "https://goo.gl/maps/4xMfxtahHPfXeAYU8",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_289.png",
            "address": "79024, м.Львів, вул. Промислова 56",
            "workDays": null,
            "phone": "+380685354545",
            "email": null
          }
        ]
      },
      "NewsResponse": {
        "example": {
          "totalPages": 1,
          "news": [
            {
              "_id": "64e5d460c4b93da54d791918",
              "imgUrl": "https://www.nytimes.com/images/2022/12/15/multimedia/15ny-petstore-1-a63a/15ny-petstore-1-a63a-blog480.jpg",
              "title": "New York Bans Pet Stores From Selling Dogs, Cats and Rabbits",
              "text": "The ban, which takes effect in December 2024, is meant to prevent the sale of animals raised by commercial breeders accused of keeping them in inhumane conditions.",
              "date": "2022-12-15T18:16:51+0000",
              "url": "https://www.nytimes.com/2022/12/15/nyregion/pet-store-ban-ny.html"
            },
            {
              "_id": "64e5d460c4b93da54d791927",
              "imgUrl": "https://www.nytimes.com/images/2023/01/06/crosswords/06wordplay-dogs/06wordplay-dogs-blog480.jpg",
              "title": "Pet Dogs and Cats",
              "text": "Erica Hsiung Wojcik opens our solving weekend.",
              "date": "2023-01-06T03:00:05+0000",
              "url": "https://www.nytimes.com/2023/01/05/crosswords/daily-puzzle-2023-01-06.html"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
